<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - Gestion des Agents de Terrain</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        :root {
            --primary: #3b82f6;
            --primary-dark: #2563eb;
            --secondary: #f59e0b;
            --success: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --info: #3b82f6;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            transition: background-color 0.3s, color 0.3s;
        }
        
        .dark {
            --bg-primary: #111827;
            --bg-secondary: #1f2937;
            --text-primary: #f3f4f6;
            --text-secondary: #d1d5db;
            --border-color: #374151;
        }
        
        .light {
            --bg-primary: #ffffff;
            --bg-secondary: #f3f4f6;
            --text-primary: #1f2937;
            --text-secondary: #4b5563;
            --border-color: #e5e7eb;
        }
        
        .card {
            transition: transform 0.2s, box-shadow 0.2s;
            border: 1px solid var(--border-color);
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        
        .sidebar-link {
            transition: all 0.2s;
            border-radius: 0.5rem;
            margin: 0.25rem 0;
        }
        
        .sidebar-link:hover, .sidebar-link.active {
            background-color: var(--primary);
            color: white;
        }
        
        .sidebar-link:hover svg, .sidebar-link.active svg {
            color: white;
        }
        
        .btn {
            transition: all 0.2s;
        }
        
        .btn:hover {
            transform: translateY(-2px);
        }
        
        .animate-pulse {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        
        @keyframes pulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: .7;
            }
        }
        
        /* Styles pour les tableaux */
        .data-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }
        
        .data-table th {
            background-color: var(--bg-secondary);
            color: var(--text-primary);
            font-weight: 600;
            text-align: left;
            padding: 0.75rem 1rem;
            border-bottom: 2px solid var(--border-color);
        }
        
        .data-table td {
            padding: 0.75rem 1rem;
            border-bottom: 1px solid var(--border-color);
        }
        
        .data-table tr:hover td {
            background-color: var(--bg-secondary);
        }
        
        /* Styles pour les formulaires */
        .form-input {
            width: 100%;
            padding: 0.5rem 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: 0.375rem;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        
        .form-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
        }
        
        /* Styles pour les badges */
        .badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.5rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 500;
        }
        
        .badge-blue {
            background-color: rgba(59, 130, 246, 0.1);
            color: #3b82f6;
        }
        
        .badge-green {
            background-color: rgba(16, 185, 129, 0.1);
            color: #10b981;
        }
        
        .badge-amber {
            background-color: rgba(245, 158, 11, 0.1);
            color: #f59e0b;
        }
        
        .badge-red {
            background-color: rgba(239, 68, 68, 0.1);
            color: #ef4444;
        }
        
        /* Styles pour les notifications */
        .notification {
            position: fixed;
            bottom: 1rem;
            right: 1rem;
            padding: 1rem;
            border-radius: 0.5rem;
            background-color: var(--success);
            color: white;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            transform: translateY(100%);
            opacity: 0;
            transition: transform 0.3s, opacity 0.3s;
            z-index: 50;
        }
        
        .notification.show {
            transform: translateY(0);
            opacity: 1;
        }
        
        /* Styles pour les onglets */
        .tab {
            padding: 0.5rem 1rem;
            border-bottom: 2px solid transparent;
            transition: all 0.2s;
            cursor: pointer;
        }
        
        .tab.active {
            border-bottom-color: var(--primary);
            color: var(--primary);
            font-weight: 500;
        }
        
        .tab:hover:not(.active) {
            border-bottom-color: var(--border-color);
        }
        
        /* Styles pour la carte */
        .map-container {
            height: 300px;
            background-color: #e5e7eb;
            border-radius: 0.5rem;
            overflow: hidden;
            position: relative;
        }
        
        .map-pin {
            position: absolute;
            width: 20px;
            height: 20px;
            background-color: var(--primary);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            cursor: pointer;
            transition: transform 0.2s;
        }
        
        .map-pin::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
            border-width: 5px;
            border-style: solid;
            border-color: var(--primary) transparent transparent transparent;
        }
        
        .map-pin:hover {
            transform: translate(-50%, -50%) scale(1.2);
            z-index: 10;
        }
        
        .map-pin-tooltip {
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background-color: var(--bg-primary);
            color: var(--text-primary);
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.75rem;
            white-space: nowrap;
            opacity: 0;
            transition: opacity 0.2s;
            pointer-events: none;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin-bottom: 5px;
        }
        
        .map-pin:hover .map-pin-tooltip {
            opacity: 1;
        }
    </style>
</head>
<body class="light">
    <div class="flex h-screen overflow-hidden">
        <!-- Sidebar -->
        <div class="hidden md:flex flex-col w-64 bg-primary text-white">
            <div class="flex items-center justify-center h-16 border-b border-blue-700">
                <h1 class="text-xl font-bold">Agents de Terrain</h1>
            </div>
            <div class="flex flex-col flex-grow p-4 overflow-auto">
                <a href="#" class="sidebar-link active flex items-center px-4 py-2 mb-2" data-target="dashboard">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z" />
                        <path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z" />
                    </svg>
                    Tableau de bord
                </a>
                <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="clients">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z" />
                    </svg>
                    Clients
                </a>
                <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="agents">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                    </svg>
                    Agents
                </a>
                <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="map">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                    </svg>
                    Carte
                </a>
                <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="settings">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd" />
                    </svg>
                    Paramètres
                </a>
                <div class="mt-auto">
                    <div class="border-t border-blue-700 pt-4">
                        <button id="theme-toggle" class="w-full flex items-center px-4 py-2 text-white hover:bg-blue-700 rounded-md transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
                            </svg>
                            <span id="theme-text">Mode sombre</span>
                        </button>
                        <a href="#" class="w-full flex items-center px-4 py-2 mt-2 text-white hover:bg-blue-700 rounded-md transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z" clip-rule="evenodd" />
                            </svg>
                            Déconnexion
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main content -->
        <div class="flex-1 flex flex-col overflow-hidden">
            <!-- Top navbar -->
            <header class="bg-white dark:bg-gray-800 shadow-sm z-10">
                <div class="px-4 sm:px-6 lg:px-8 py-4">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <button class="md:hidden mr-4 text-gray-500 focus:outline-none" id="sidebar-toggle">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                                </svg>
                            </button>
                            <h1 class="text-xl font-semibold text-gray-800 dark:text-white" id="page-title">Tableau de bord</h1>
                        </div>
                        <div class="flex items-center space-x-4">
                            <div class="relative">
                                <button class="flex items-center text-gray-500 hover:text-gray-700 focus:outline-none">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                                    </svg>
                                    <span class="absolute top-0 right-0 h-2 w-2 bg-red-500 rounded-full"></span>
                                </button>
                            </div>
                            <div class="border-l border-gray-200 dark:border-gray-700 h-8"></div>
                            <div class="flex items-center">
                                <div class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-semibold">A</div>
                                <span class="ml-2 text-sm font-medium text-gray-700 dark:text-gray-300">Admin</span>
                            </div>
                        </div>
                    </div>
                </div>
            </header>

            <!-- Mobile sidebar -->
            <div class="md:hidden fixed inset-0 bg-gray-800 bg-opacity-50 z-20 hidden" id="mobile-sidebar-backdrop"></div>
            <div class="md:hidden fixed inset-y-0 left-0 w-64 bg-blue-600 text-white z-30 transform -translate-x-full transition-transform duration-300" id="mobile-sidebar">
                <div class="flex items-center justify-between h-16 border-b border-blue-700 px-4">
                    <h1 class="text-xl font-bold">Agents de Terrain</h1>
                    <button id="close-sidebar">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
                <div class="flex flex-col p-4">
                    <a href="#" class="sidebar-link active flex items-center px-4 py-2 mb-2" data-target="dashboard">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z" />
                            <path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z" />
                        </svg>
                        Tableau de bord
                    </a>
                    <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="clients">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z" />
                        </svg>
                        Clients
                    </a>
                    <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="agents">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                        </svg>
                        Agents
                    </a>
                    <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="map">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                        </svg>
                        Carte
                    </a>
                    <a href="#" class="sidebar-link flex items-center px-4 py-2 mb-2" data-target="settings">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd" />
                        </svg>
                        Paramètres
                    </a>
                </div>
            </div>

            <!-- Main content area -->
            <main class="flex-1 overflow-y-auto bg-gray-50 dark:bg-gray-900 p-4 sm:p-6">
                <!-- Dashboard section -->
                <section id="dashboard-section" class="space-y-6">
                    <!-- Stats cards -->
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                            <div class="flex items-center justify-between">
                                <div>
                                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Total Clients</p>
                                    <p class="text-3xl font-bold text-gray-900 dark:text-white" id="total-clients">0</p>
                                </div>
                                <div class="p-3 bg-blue-100 rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="flex items-center">
                                    <span class="text-green-500 flex items-center text-sm font-medium">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z" clip-rule="evenodd" />
                                        </svg>
                                        12% d'augmentation
                                    </span>
                                    <span class="text-gray-500 dark:text-gray-400 text-sm ml-2">depuis le mois dernier</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                            <div class="flex items-center justify-between">
                                <div>
                                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Agents actifs</p>
                                    <p class="text-3xl font-bold text-gray-900 dark:text-white">4</p>
                                </div>
                                <div class="p-3 bg-green-100 rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="flex items-center">
                                    <span class="text-green-500 flex items-center text-sm font-medium">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z" clip-rule="evenodd" />
                                        </svg>
                                        1 nouvel agent
                                    </span>
                                    <span class="text-gray-500 dark:text-gray-400 text-sm ml-2">cette semaine</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                            <div class="flex items-center justify-between">
                                <div>
                                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Visites aujourd'hui</p>
                                    <p class="text-3xl font-bold text-gray-900 dark:text-white">12</p>
                                </div>
                                <div class="p-3 bg-amber-100 rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-amber-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="flex items-center">
                                    <span class="text-red-500 flex items-center text-sm font-medium">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M12 13a1 1 0 100 2h5a1 1 0 001-1V9a1 1 0 10-2 0v2.586l-4.293-4.293a1 1 0 00-1.414 0L8 9.586 3.707 5.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0L11 9.414 14.586 13H12z" clip-rule="evenodd" />
                                        </svg>
                                        8% de baisse
                                    </span>
                                    <span class="text-gray-500 dark:text-gray-400 text-sm ml-2">par rapport à hier</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                            <div class="flex items-center justify-between">
                                <div>
                                    <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Taux de satisfaction</p>
                                    <p class="text-3xl font-bold text-gray-900 dark:text-white">95%</p>
                                </div>
                                <div class="p-3 bg-purple-100 rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="flex items-center">
                                    <span class="text-green-500 flex items-center text-sm font-medium">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z" clip-rule="evenodd" />
                                        </svg>
                                        3% d'augmentation
                                    </span>
                                    <span class="text-gray-500 dark:text-gray-400 text-sm ml-2">depuis la semaine dernière</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Charts and activity -->
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        <div class="lg:col-span-2 bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                            <div class="flex items-center justify-between mb-4">
                                <h3 class="text-lg font-medium text-gray-900 dark:text-white">Activité des clients</h3>
                                <div class="flex space-x-2">
                                    <button class="px-3 py-1 text-xs font-medium rounded-md bg-blue-100 text-blue-600 hover:bg-blue-200 transition-colors">Semaine</button>
                                    <button class="px-3 py-1 text-xs font-medium rounded-md text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">Mois</button>
                                    <button class="px-3 py-1 text-xs font-medium rounded-md text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">Année</button>
                                </div>
                            </div>
                            <div class="h-64">
                                <canvas id="clientActivityChart"></canvas>
                            </div>
                        </div>
                        
                        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Répartition des clients</h3>
                            <div class="h-64">
                                <canvas id="clientDistributionChart"></canvas>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Recent clients -->
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                        <div class="flex items-center justify-between mb-4">
                            <h3 class="text-lg font-medium text-gray-900 dark:text-white">Clients récents</h3>
                            <a href="#" class="text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300" data-target="clients">Voir tous</a>
                        </div>
                        <div class="overflow-x-auto">
                            <table class="min-w-full data-table">
                                <thead>
                                    <tr>
                                        <th>Client</th>
                                        <th>Agent</th>
                                        <th>Adresse</th>
                                        <th>Statut</th>
                                        <th>Date d'ajout</th>
                                    </tr>
                                </thead>
                                <tbody id="recent-clients">
                                    <!-- Les clients récents seront ajoutés ici dynamiquement -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </section>
                
                <!-- Clients section -->
                <section id="clients-section" class="space-y-6 hidden">
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                        <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
                            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4 md:mb-0">Liste des clients</h3>
                            <div class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4">
                                <div class="relative">
                                    <input type="text" id="searchClientInput" placeholder="Rechercher un client..." class="form-input pl-10">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                        </svg>
                                    </div>
                                </div>
                                <button id="addClientBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-all duration-200 flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                                    </svg>
                                    Ajouter un client
                                </button>
                            </div>
                        </div>
                        
                        <div class="overflow-x-auto">
                            <table class="min-w-full data-table">
                                <thead>
                                    <tr>
                                        <th>Client</th>
                                        <th>Agent</th>
                                        <th>Adresse</th>
                                        <th>Statut</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="clientsList">
                                    <!-- Les clients seront ajoutés ici dynamiquement -->
                                </tbody>
                            </table>
                        </div>
                        
                        <div id="emptyState" class="text-center py-8 hidden">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                            </svg>
                            <p class="mt-4 text-gray-500 dark:text-gray-400">Aucun client enregistré pour le moment</p>
                            <p class="text-sm text-gray-400 dark:text-gray-500">Utilisez le bouton "Ajouter un client" pour commencer</p>
                        </div>
                    </div>
                </section>
                
                <!-- Agents section -->
                <section id="agents-section" class="space-y-6 hidden">
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                        <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
                            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4 md:mb-0">Liste des agents</h3>
                            <button class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-all duration-200 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                                </svg>
                                Ajouter un agent
                            </button>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                            <div class="bg-white dark:bg-gray-700 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-600">
                                <div class="flex flex-col items-center">
                                    <div class="h-20 w-20 rounded-full bg-blue-100 flex items-center justify-center text-blue-600 text-2xl font-bold mb-4">A1</div>
                                    <h4 class="text-lg font-medium text-gray-900 dark:text-white">Agent 1</h4>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">agent1@example.com</p>
                                    <div class="mt-2">
                                        <span class="badge badge-green">Actif</span>
                                    </div>
                                    <div class="mt-4 text-center">
                                        <p class="text-sm text-gray-500 dark:text-gray-400">Clients assignés</p>
                                        <p class="text-xl font-semibold text-gray-900 dark:text-white" id="agent1-clients">0</p>
                                    </div>
                                    <div class="mt-4 flex space-x-2">
                                        <button class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                            </svg>
                                        </button>
                                        <button class="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="bg-white dark:bg-gray-700 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-600">
                                <div class="flex flex-col items-center">
                                    <div class="h-20 w-20 rounded-full bg-green-100 flex items-center justify-center text-green-600 text-2xl font-bold mb-4">A2</div>
                                    <h4 class="text-lg font-medium text-gray-900 dark:text-white">Agent 2</h4>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">agent2@example.com</p>
                                    <div class="mt-2">
                                        <span class="badge badge-green">Actif</span>
                                    </div>
                                    <div class="mt-4 text-center">
                                        <p class="text-sm text-gray-500 dark:text-gray-400">Clients assignés</p>
                                        <p class="text-xl font-semibold text-gray-900 dark:text-white" id="agent2-clients">0</p>
                                    </div>
                                    <div class="mt-4 flex space-x-2">
                                        <button class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                            </svg>
                                        </button>
                                        <button class="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="bg-white dark:bg-gray-700 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-600">
                                <div class="flex flex-col items-center">
                                    <div class="h-20 w-20 rounded-full bg-purple-100 flex items-center justify-center text-purple-600 text-2xl font-bold mb-4">A3</div>
                                    <h4 class="text-lg font-medium text-gray-900 dark:text-white">Agent 3</h4>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">agent3@example.com</p>
                                    <div class="mt-2">
                                        <span class="badge badge-blue">En congé</span>
                                    </div>
                                    <div class="mt-4 text-center">
                                        <p class="text-sm text-gray-500 dark:text-gray-400">Clients assignés</p>
                                        <p class="text-xl font-semibold text-gray-900 dark:text-white" id="agent3-clients">0</p>
                                    </div>
                                    <div class="mt-4 flex space-x-2">
                                        <button class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                            </svg>
                                        </button>
                                        <button class="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="bg-white dark:bg-gray-700 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-600">
                                <div class="flex flex-col items-center">
                                    <div class="h-20 w-20 rounded-full bg-amber-100 flex items-center justify-center text-amber-600 text-2xl font-bold mb-4">A4</div>
                                    <h4 class="text-lg font-medium text-gray-900 dark:text-white">Agent 4</h4>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">agent4@example.com</p>
                                    <div class="mt-2">
                                        <span class="badge badge-green">Actif</span>
                                    </div>
                                    <div class="mt-4 text-center">
                                        <p class="text-sm text-gray-500 dark:text-gray-400">Clients assignés</p>
                                        <p class="text-xl font-semibold text-gray-900 dark:text-white" id="agent4-clients">0</p>
                                    </div>
                                    <div class="mt-4 flex space-x-2">
                                        <button class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                            </svg>
                                        </button>
                                        <button class="text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                
                <!-- Map section -->
                <section id="map-section" class="space-y-6 hidden">
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Carte des clients</h3>
                        <div class="map-container">
                            <!-- Carte simplifiée avec des points représentant les clients -->
                            <div class="w-full h-full bg-gray-200 dark:bg-gray-700 relative">
                                <!-- Fond de carte stylisé -->
                                <svg width="100%" height="100%" viewBox="0 0 800 400" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M0,0 L800,0 L800,400 L0,400 Z" fill="#e5e7eb" class="dark:fill-gray-700" />
                                    <path d="M100,100 Q400,50 700,150 T100,300" stroke="#d1d5db" class="dark:stroke-gray-600" stroke-width="2" fill="none" />
                                    <path d="M50,50 Q200,200 400,100 T750,250" stroke="#d1d5db" class="dark:stroke-gray-600" stroke-width="2" fill="none" />
                                    <circle cx="300" cy="150" r="50" fill="#bfdbfe" class="dark:fill-blue-900" opacity="0.3" />
                                    <circle cx="500" cy="250" r="70" fill="#bfdbfe" class="dark:fill-blue-900" opacity="0.3" />
                                </svg>
                                
                                <!-- Points représentant les clients -->
                                <div class="map-pin" style="top: 30%; left: 25%;">
                                    <div class="map-pin-tooltip">Client 1 - Agent 1</div>
                                </div>
                                <div class="map-pin" style="top: 45%; left: 40%;">
                                    <div class="map-pin-tooltip">Client 2 - Agent 2</div>
                                </div>
                                <div class="map-pin" style="top: 60%; left: 65%;">
                                    <div class="map-pin-tooltip">Client 3 - Agent 1</div>
                                </div>
                                <div class="map-pin" style="top: 25%; left: 75%;">
                                    <div class="map-pin-tooltip">Client 4 - Agent 3</div>
                                </div>
                                <div class="map-pin" style="top: 70%; left: 30%;">
                                    <div class="map-pin-tooltip">Client 5 - Agent 4</div>
                                </div>
                            </div>
                        </div>
                        <div class="mt-4 flex flex-wrap gap-4">
                            <div class="flex items-center">
                                <div class="w-4 h-4 rounded-full bg-blue-600 mr-2"></div>
                                <span class="text-sm text-gray-600 dark:text-gray-300">Tous les clients</span>
                            </div>
                            <button class="px-3 py-1 text-xs font-medium rounded-md bg-blue-100 text-blue-600 hover:bg-blue-200 transition-colors">Agent 1</button>
                            <button class="px-3 py-1 text-xs font-medium rounded-md text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">Agent 2</button>
                            <button class="px-3 py-1 text-xs font-medium rounded-md text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">Agent 3</button>
                            <button class="px-3 py-1 text-xs font-medium rounded-md text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">Agent 4</button>
                        </div>
                    </div>
                </section>
                
                <!-- Settings section -->
                <section id="settings-section" class="space-y-6 hidden">
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 card">
                        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-6">Paramètres</h3>
                        
                        <div class="space-y-6">
                            <div>
                                <h4 class="text-md font-medium text-gray-800 dark:text-gray-200 mb-4">Préférences d'affichage</h4>
                                <div class="flex items-center justify-between py-3 border-b border-gray-200 dark:border-gray-700">
                                    <div>
                                        <p class="text-gray-700 dark:text-gray-300">Mode sombre</p>
                                        <p class="text-sm text-gray-500 dark:text-gray-400">Activer le mode sombre pour l'interface</p>
                                    </div>
                                    <label class="relative inline-flex items-center cursor-pointer">
                                        <input type="checkbox" id="dark-mode-toggle" class="sr-only peer">
                                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
                                    </label>
                                </div>
                                <div class="flex items-center justify-between py-3 border-b border-gray-200 dark:border-gray-700">
                                    <div>
                                        <p class="text-gray-700 dark:text-gray-300">Notifications</p>
                                        <p class="text-sm text-gray-500 dark:text-gray-400">Recevoir des notifications pour les nouveaux clients</p>
                                    </div>
                                    <label class="relative inline-flex items-center cursor-pointer">
                                        <input type="checkbox" checked class="sr-only peer">
                                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
                                    </label>
                                </div>
                            </div>
                            
                            <div>
                                <h4 class="text-md font-medium text-gray-800 dark:text-gray-200 mb-4">Informations du compte</h4>
                                <form class="space-y-4">
                                    <div>
                                        <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Nom</label>
                                        <input type="text" id="name" name="name" value="Administrateur" class="form-input">
                                    </div>
                                    <div>
                                        <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email</label>
                                        <input type="email" id="email" name="email" value="admin@example.com" class="form-input">
                                    </div>
                                    <div>
                                        <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Nouveau mot de passe</label>
                                        <input type="password" id="password" name="password" placeholder="••••••••" class="form-input">
                                    </div>
                                    <div>
                                        <label for="password_confirmation" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Confirmer le mot de passe</label>
                                        <input type="password" id="password_confirmation" name="password_confirmation" placeholder="••••••••" class="form-input">
                                    </div>
                                    <div class="pt-4">
                                        <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-all duration-200">
                                            Enregistrer les modifications
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </section>
            </main>
        </div>
    </div>
    
    <!-- Modal d'ajout/édition de client -->
    <div id="clientModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="p-6">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-lg font-medium text-gray-900 dark:text-white" id="modalTitle">Ajouter un client</h3>
                    <button id="closeModal" class="text-gray-400 hover:text-gray-500 focus:outline-none">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
                <form id="clientForm" class="space-y-4">
                    <input type="hidden" id="clientId">
                    <div>
                        <label for="nom" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Nom</label>
                        <input type="text" id="nom" name="nom" class="form-input" required>
                    </div>
                    <div>
                        <label for="postnom" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Postnom</label>
                        <input type="text" id="postnom" name="postnom" class="form-input" required>
                    </div>
                    <div>
                        <label for="prenom" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Prénom</label>
                        <input type="text" id="prenom" name="prenom" class="form-input" required>
                    </div>
                    <div>
                        <label for="adresse" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Adresse</label>
                        <textarea id="adresse" name="adresse" rows="3" class="form-input" required></textarea>
                    </div>
                    <div>
                        <label for="agent" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Agent assigné</label>
                        <select id="agent" name="agent" class="form-input">
                            <option value="Agent 1">Agent 1</option>
                            <option value="Agent 2">Agent 2</option>
                            <option value="Agent 3">Agent 3</option>
                            <option value="Agent 4">Agent 4</option>
                        </select>
                    </div>
                    <div>
                        <label for="statut" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Statut</label>
                        <select id="statut" name="statut" class="form-input">
                            <option value="Actif">Actif</option>
                            <option value="En attente">En attente</option>
                            <option value="Inactif">Inactif</option>
                        </select>
                    </div>
                    <div class="pt-4 flex justify-end">
                        <button type="button" id="cancelBtn" class="bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-white font-medium py-2 px-4 rounded-md transition-all duration-200 mr-2">
                            Annuler
                        </button>
                        <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-all duration-200">
                            Sauvegarder
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <!-- Notification -->
    <div id="notification" class="notification flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
        </svg>
        <span id="notificationMessage">Client ajouté avec succès!</span>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialisation des variables
            const body = document.body;
            const themeToggle = document.getElementById('theme-toggle');
            const themeText = document.getElementById('theme-text');
            const darkModeToggle = document.getElementById('dark-mode-toggle');
            const sidebarLinks = document.querySelectorAll('.sidebar-link');
            const sections = document.querySelectorAll('section');
            const pageTitle = document.getElementById('page-title');
            const sidebarToggle = document.getElementById('sidebar-toggle');
            const mobileSidebar = document.getElementById('mobile-sidebar');
            const mobileSidebarBackdrop = document.getElementById('mobile-sidebar-backdrop');
            const closeSidebar = document.getElementById('close-sidebar');
            const clientModal = document.getElementById('clientModal');
            const addClientBtn = document.getElementById('addClientBtn');
            const closeModal = document.getElementById('closeModal');
            const cancelBtn = document.getElementById('cancelBtn');
            const clientForm = document.getElementById('clientForm');
            const modalTitle = document.getElementById('modalTitle');
            const notification = document.getElementById('notification');
            const notificationMessage = document.getElementById('notificationMessage');
            
            // Charger les clients depuis le stockage local
            let clients = JSON.parse(localStorage.getItem('clients')) || [];
            
            // Initialiser les graphiques
            initCharts();
            
            // Mettre à jour les statistiques
            updateStats();
            
            // Afficher les clients
            renderClients();
            renderRecentClients();
            
            // Gestion du thème
            function toggleTheme() {
                if (body.classList.contains('light')) {
                    body.classList.remove('light');
                    body.classList.add('dark');
                    themeText.textContent = 'Mode clair';
                    darkModeToggle.checked = true;
                    localStorage.setItem('theme', 'dark');
                } else {
                    body.classList.remove('dark');
                    body.classList.add('light');
                    themeText.textContent = 'Mode sombre';
                    darkModeToggle.checked = false;
                    localStorage.setItem('theme', 'light');
                }
            }
            
            // Vérifier le thème enregistré
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme === 'dark') {
                body.classList.remove('light');
                body.classList.add('dark');
                themeText.textContent = 'Mode clair';
                darkModeToggle.checked = true;
            }
            
            // Écouteurs d'événements pour le thème
            themeToggle.addEventListener('click', toggleTheme);
            darkModeToggle.addEventListener('change', toggleTheme);
            
            // Navigation
            sidebarLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const target = this.getAttribute('data-target');
                    
                    // Mettre à jour les liens actifs
                    sidebarLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Afficher la section correspondante
                    sections.forEach(section => {
                        if (section.id === `${target}-section`) {
                            section.classList.remove('hidden');
                            pageTitle.textContent = this.textContent.trim();
                        } else {
                            section.classList.add('hidden');
                        }
                    });
                    
                    // Fermer le menu mobile
                    mobileSidebar.classList.add('-translate-x-full');
                    mobileSidebarBackdrop.classList.add('hidden');
                });
            });
            
            // Menu mobile
            sidebarToggle.addEventListener('click', function() {
                mobileSidebar.classList.remove('-translate-x-full');
                mobileSidebarBackdrop.classList.remove('hidden');
            });
            
            closeSidebar.addEventListener('click', function() {
                mobileSidebar.classList.add('-translate-x-full');
                mobileSidebarBackdrop.classList.add('hidden');
            });
            
            mobileSidebarBackdrop.addEventListener('click', function() {
                mobileSidebar.classList.add('-translate-x-full');
                mobileSidebarBackdrop.classList.add('hidden');
            });
            
            // Modal de client
            addClientBtn.addEventListener('click', function() {
                openModal();
            });
            
            closeModal.addEventListener('click', function() {
                clientModal.classList.add('hidden');
            });
            
            cancelBtn.addEventListener('click', function() {
                clientModal.classList.add('hidden');
            });
            
            // Soumission du formulaire client
            clientForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const clientId = document.getElementById('clientId').value;
                const client = {
                    nom: document.getElementById('nom').value,
                    postnom: document.getElementById('postnom').value,
                    prenom: document.getElementById('prenom').value,
                    adresse: document.getElementById('adresse').value,
                    agent: document.getElementById('agent').value,
                    statut: document.getElementById('statut').value,
                    date: new Date().toISOString().split('T')[0]
                };
                
                if (clientId) {
                    // Mise à jour d'un client existant
                    clients[clientId] = client;
                    showNotification('Client mis à jour avec succès!');
                } else {
                    // Ajout d'un nouveau client
                    clients.push(client);
                    showNotification('Client ajouté avec succès!');
                }
                
                // Sauvegarder dans le stockage local
                localStorage.setItem('clients', JSON.stringify(clients));
                
                // Mettre à jour l'affichage
                renderClients();
                renderRecentClients();
                updateStats();
                
                // Fermer le modal
                clientModal.classList.add('hidden');
                
                // Réinitialiser le formulaire
                clientForm.reset();
                document.getElementById('clientId').value = '';
            });
            
            // Fonction pour ouvrir le modal
            function openModal(clientIndex = null) {
                if (clientIndex !== null) {
                    // Mode édition
                    const client = clients[clientIndex];
                    document.getElementById('clientId').value = clientIndex;
                    document.getElementById('nom').value = client.nom;
                    document.getElementById('postnom').value = client.postnom;
                    document.getElementById('prenom').value = client.prenom;
                    document.getElementById('adresse').value = client.adresse;
                    document.getElementById('agent').value = client.agent;
                    document.getElementById('statut').value = client.statut || 'Actif';
                    modalTitle.textContent = 'Modifier le client';
                } else {
                    // Mode ajout
                    clientForm.reset();
                    document.getElementById('clientId').value = '';
                    modalTitle.textContent = 'Ajouter un client';
                }
                
                clientModal.classList.remove('hidden');
            }
            
            // Fonction pour afficher une notification
            function showNotification(message) {
                notificationMessage.textContent = message;
                notification.classList.add('show');
                
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 3000);
            }
            
            // Fonction pour afficher les clients
            function renderClients() {
                const clientsList = document.getElementById('clientsList');
                const emptyState = document.getElementById('emptyState');
                const totalClientsElement = document.getElementById('total-clients');
                
                // Mettre à jour le compteur total
                totalClientsElement.textContent = clients.length;
                
                if (clients.length === 0) {
                    clientsList.innerHTML = '';
                    emptyState.classList.remove('hidden');
                    return;
                }
                
                emptyState.classList.add('hidden');
                clientsList.innerHTML = '';
                
                clients.forEach((client, index) => {
                    const row = document.createElement('tr');
                    
                    // Déterminer la classe de badge en fonction du statut
                    let badgeClass = 'badge-green';
                    if (client.statut === 'En attente') badgeClass = 'badge-amber';
                    if (client.statut === 'Inactif') badgeClass = 'badge-red';
                    
                    row.innerHTML = `
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="flex-shrink-0 h-10 w-10 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center text-blue-600 dark:text-blue-300 font-bold">
                                    ${client.nom.charAt(0)}${client.prenom.charAt(0)}
                                </div>
                                <div class="ml-4">
                                    <div class="text-sm font-medium text-gray-900 dark:text-white">${client.nom} ${client.postnom}</div>
                                    <div class="text-sm text-gray-500 dark:text-gray-400">${client.prenom}</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="badge ${badgeClass === 'badge-green' ? 'badge-blue' : badgeClass}">
                                ${client.agent}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-900 dark:text-white">${client.adresse}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="badge ${badgeClass}">
                                ${client.statut || 'Actif'}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300 mr-3 edit-btn" data-index="${index}">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                </svg>
                            </button>
                            <button class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300 delete-btn" data-index="${index}">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                            </button>
                        </td>
                    `;
                    
                    clientsList.appendChild(row);
                });
                
                // Ajouter les écouteurs d'événements pour les boutons d'édition et de suppression
                document.querySelectorAll('.edit-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const index = parseInt(this.getAttribute('data-index'));
                        openModal(index);
                    });
                });
                
                document.querySelectorAll('.delete-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const index = parseInt(this.getAttribute('data-index'));
                        deleteClient(index);
                    });
                });
            }
            
            // Fonction pour afficher les clients récents
            function renderRecentClients() {
                const recentClientsList = document.getElementById('recent-clients');
                
                if (!recentClientsList) return;
                
                recentClientsList.innerHTML = '';
                
                // Prendre les 5 derniers clients
                const recentClients = [...clients].reverse().slice(0, 5);
                
                if (recentClients.length === 0) {
                    recentClientsList.innerHTML = `
                        <tr>
                            <td colspan="5" class="px-6 py-4 text-center text-gray-500 dark:text-gray-400">
                                Aucun client enregistré pour le moment
                            </td>
                        </tr>
                    `;
                    return;
                }
                
                recentClients.forEach(client => {
                    // Déterminer la classe de badge en fonction du statut
                    let badgeClass = 'badge-green';
                    if (client.statut === 'En attente') badgeClass = 'badge-amber';
                    if (client.statut === 'Inactif') badgeClass = 'badge-red';
                    
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="flex-shrink-0 h-8 w-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center text-blue-600 dark:text-blue-300 font-bold text-xs">
                                    ${client.nom.charAt(0)}${client.prenom.charAt(0)}
                                </div>
                                <div class="ml-3">
                                    <div class="text-sm font-medium text-gray-900 dark:text-white">${client.nom} ${client.prenom}</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="badge ${badgeClass === 'badge-green' ? 'badge-blue' : badgeClass}">
                                ${client.agent}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-900 dark:text-white">${client.adresse.substring(0, 20)}${client.adresse.length > 20 ? '...' : ''}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="badge ${badgeClass}">
                                ${client.statut || 'Actif'}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                            ${client.date || 'Aujourd\'hui'}
                        </td>
                    `;
                    
                    recentClientsList.appendChild(row);
                });
            }
            
            // Fonction pour supprimer un client
            function deleteClient(index) {
                if (confirm('Êtes-vous sûr de vouloir supprimer ce client?')) {
                    clients.splice(index, 1);
                    localStorage.setItem('clients', JSON.stringify(clients));
                    renderClients();
                    renderRecentClients();
                    updateStats();
                    showNotification('Client supprimé avec succès!');
                }
            }
            
            // Fonction pour mettre à jour les statistiques
            function updateStats() {
                // Compter les clients par agent
                const agentCounts = {
                    'Agent 1': 0,
                    'Agent 2': 0,
                    'Agent 3': 0,
                    'Agent 4': 0
                };
                
                clients.forEach(client => {
                    if (agentCounts[client.agent] !== undefined) {
                        agentCounts[client.agent]++;
                    }
                });
                
                // Mettre à jour les compteurs
                document.getElementById('agent1-clients').textContent = agentCounts['Agent 1'];
                document.getElementById('agent2-clients').textContent = agentCounts['Agent 2'];
                document.getElementById('agent3-clients').textContent = agentCounts['Agent 3'];
                document.getElementById('agent4-clients').textContent = agentCounts['Agent 4'];
                
                // Mettre à jour les graphiques
                updateCharts(agentCounts);
            }
            
            // Fonction pour initialiser les graphiques
            function initCharts() {
                // Graphique d'activité des clients
                const activityCtx = document.getElementById('clientActivityChart').getContext('2d');
                window.clientActivityChart = new Chart(activityCtx, {
                    type: 'line',
                    data: {
                        labels: ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'],
                        datasets: [{
                            label: 'Nouveaux clients',
                            data: [3, 5, 2, 6, 4, 2, 1],
                            backgroundColor: 'rgba(59, 130, 246, 0.2)',
                            borderColor: 'rgba(59, 130, 246, 1)',
                            borderWidth: 2,
                            tension: 0.4,
                            pointBackgroundColor: 'rgba(59, 130, 246, 1)'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: 'rgba(156, 163, 175, 0.1)'
                                },
                                ticks: {
                                    precision: 0
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
                
                // Graphique de répartition des clients
                const distributionCtx = document.getElementById('clientDistributionChart').getContext('2d');
                window.clientDistributionChart = new Chart(distributionCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Agent 1', 'Agent 2', 'Agent 3', 'Agent 4'],
                        datasets: [{
                            data: [0, 0, 0, 0],
                            backgroundColor: [
                                'rgba(59, 130, 246, 0.8)',
                                'rgba(16, 185, 129, 0.8)',
                                'rgba(139, 92, 246, 0.8)',
                                'rgba(245, 158, 11, 0.8)'
                            ],
                            borderColor: [
                                'rgba(59, 130, 246, 1)',
                                'rgba(16, 185, 129, 1)',
                                'rgba(139, 92, 246, 1)',
                                'rgba(245, 158, 11, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 20,
                                    boxWidth: 12
                                }
                            }
                        },
                        cutout: '70%'
                    }
                });
            }
            
            // Fonction pour mettre à jour les graphiques
            function updateCharts(agentCounts) {
                if (window.clientDistributionChart) {
                    window.clientDistributionChart.data.datasets[0].data = [
                        agentCounts['Agent 1'],
                        agentCounts['Agent 2'],
                        agentCounts['Agent 3'],
                        agentCounts['Agent 4']
                    ];
                    window.clientDistributionChart.update();
                }
            }
            
            // Recherche de clients
            const searchClientInput = document.getElementById('searchClientInput');
            if (searchClientInput) {
                searchClientInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    
                    if (searchTerm === '') {
                        renderClients();
                        return;
                    }
                    
                    const filteredClients = clients.filter(client => {
                        return (
                            client.nom.toLowerCase().includes(searchTerm) ||
                            client.postnom.toLowerCase().includes(searchTerm) ||
                            client.prenom.toLowerCase().includes(searchTerm) ||
                            client.adresse.toLowerCase().includes(searchTerm) ||
                            client.agent.toLowerCase().includes(searchTerm)
                        );
                    });
                    
                    const clientsList = document.getElementById('clientsList');
                    const emptyState = document.getElementById('emptyState');
                    
                    if (filteredClients.length === 0) {
                        clientsList.innerHTML = '';
                        emptyState.classList.remove('hidden');
                        return;
                    }
                    
                    emptyState.classList.add('hidden');
                    clientsList.innerHTML = '';
                    
                    filteredClients.forEach((client, originalIndex) => {
                        const index = clients.indexOf(client);
                        const row = document.createElement('tr');
                        
                        // Déterminer la classe de badge en fonction du statut
                        let badgeClass = 'badge-green';
                        if (client.statut === 'En attente') badgeClass = 'badge-amber';
                        if (client.statut === 'Inactif') badgeClass = 'badge-red';
                        
                        row.innerHTML = `
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="flex-shrink-0 h-10 w-10 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center text-blue-600 dark:text-blue-300 font-bold">
                                        ${client.nom.charAt(0)}${client.prenom.charAt(0)}
                                    </div>
                                    <div class="ml-4">
                                        <div class="text-sm font-medium text-gray-900 dark:text-white">${client.nom} ${client.postnom}</div>
                                        <div class="text-sm text-gray-500 dark:text-gray-400">${client.prenom}</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="badge ${badgeClass === 'badge-green' ? 'badge-blue' : badgeClass}">
                                    ${client.agent}
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900 dark:text-white">${client.adresse}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="badge ${badgeClass}">
                                    ${client.statut || 'Actif'}
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <button class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300 mr-3 edit-btn" data-index="${index}">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                    </svg>
                                </button>
                                <button class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300 delete-btn" data-index="${index}">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                    </svg>
                                </button>
                            </td>
                        `;
                        
                        clientsList.appendChild(row);
                    });
                    
                    // Ajouter les écouteurs d'événements pour les boutons d'édition et de suppression
                    document.querySelectorAll('.edit-btn').forEach(btn => {
                        btn.addEventListener('click', function() {
                            const index = parseInt(this.getAttribute('data-index'));
                            openModal(index);
                        });
                    });
                    
                    document.querySelectorAll('.delete-btn').forEach(btn => {
                        btn.addEventListener('click', function() {
                            const index = parseInt(this.getAttribute('data-index'));
                            deleteClient(index);
                        });
                    });
                });
            }
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'965d2b4802310d06',t:'MTc1MzYzMDEzMi4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
